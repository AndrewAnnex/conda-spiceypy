diff --git a/appveyor/makeDynamicSpice.bat b/appveyor/makeDynamicSpice.bat
index 9396a5f..f6199d8 100644
--- a/appveyor/makeDynamicSpice.bat
+++ b/appveyor/makeDynamicSpice.bat
@@ -8,7 +8,7 @@ rem    Specifically cl.exe and link.exe .
 rem
 rem
 @echo on
-rem Running makeDynamicSpice.bat, this may take some time (a minute or two) ...
+rem Running makeDynamicSpice.bat, ZZZ this may take some time (a minute or two) ...
 @echo off
 
 set cl= /c /O2 /nologo -D_COMPLEX_DEFINED -DMSDOS -DOMIT_BLANK_CC -DNON_ANSI_STDIO
diff --git a/setup.py b/setup.py
index c2b6446..722caaf 100644
--- a/setup.py
+++ b/setup.py
@@ -97,6 +97,7 @@ def build_library():
         finally:
             os.chdir(currentDir)
     elif host_OS == "Windows":
+        print("IN BUILD setup.py spice")
         currentDir = os.getcwd()
         try:
             destination = os.path.join(cspice_dir, "src", "cspice")
@@ -106,11 +107,15 @@ def build_library():
             shutil.copy(makeBat, destination)
             # run the script
             os.chdir(destination)
+            print("about to run make dynamic")
             windows_build = subprocess.Popen("makeDynamicSpice.bat", shell=True)
             status = windows_build.wait()
+            print("finished make dynamic")
+            print("STATUS CODE: ", str(status))
             if status != 0:
                 raise BaseException('{0}'.format(status))
         except BaseException as error:
+            print("RAN INTO EXCEPTION: ", error)
             sys.exit("Build failed with: {0}".format(error.args))
             pass
         finally:
@@ -125,9 +130,22 @@ def move_to_root_directory():
             if host_OS == "Linux" or host_OS == "Darwin":
                 os.rename(os.path.join(cspice_dir, 'lib', 'spice.so'), destination)
             elif host_OS == "Windows":
+                print("")
+                print("")
+                print("####################################################")
+                print("in move_to_root for windows")
+                print("cspice_dir: " + cspice_dir)
+                print("destination: " + destination)
+                print("")
+                print("####################################################")
+                print("Does cspice.dll exist where we think it does? {}".format(os.path.exists(os.path.join(cspice_dir, 'src', 'cspice', 'cspice.dll'))))
+                print("current contents in destination: ", [x for x in os.listdir(os.path.join(destination))])
                 os.rename(os.path.join(cspice_dir, 'src', 'cspice', 'cspice.dll'), destination)
         except BaseException as e:
             sys.exit('{0} file not found, what happend?: {1}'.format(sharedLib, e))
+        finally:
+            print("we should have moved cspide.dll or cspice.so to the right spot")
+            print([x for x in os.listdir(os.path.join(destination))])
 
 
 def cleanup():
@@ -160,7 +178,9 @@ def windows_method():
             return
         else:
             # Build the DLL
+            print('IN WINDOWS METHOD')
             build_library()
+            print("OUTSIDE BUIOLD_LIBRARY")
             # Move to correct location (root of the distribution)
             move_to_root_directory()
 
